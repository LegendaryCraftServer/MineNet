local continue = false
local ID = os.getComputerID()
local CHANNEL = 1
local master = 3
local modem = peripheral.wrap('right')

function emptyTurtle()
  turtle.turnLeft()
  turtle.turnLeft()
  for i = 1,16 do
	turtle.select(i)
	turtle.drop()
  end
  turtle.turnLeft()
  turtle.turnLeft()
end
 
function attack() 
	local timeout = 0
	print('Starting_attack')
	while continue == true do				
		if timeout == 0 then
			emptyTurtle()
			timeout = 20
		end
		turtle.attack()
		timeout = timeout - 1
		sleep(0.5)
	end
end


function sendStatus(channel)
	local status = {}	
	sleep(1)
	status['running'] = continue	
	print('sending status', ',',  ID, ', ', textutils.serialize(status))
	modem.transmit(channel, ID, textutils.serialize(status))
end

function waitForOrder()	
	while true do 
		local event, side, chan, replyChan, message, distance = os.pullEvent('modem_message')
print('message : ', message)	
		if replyChan == master and message == 'stop_killWither' then
			continue = false
			break
		end
		if replyChan == master and message == 'status_'..ID then		
			sendStatus(replyChan)
		end
	end		
end

modem.open(1)
while true do 
	local event, side, chan, replyChan, message, distance = os.pullEvent('modem_message')
	if replyChan == master and message == 'go_killWither' then
		continue = true
		parallel.waitForAll(waitForOrder, attack)
	end
	if replyChan == master and message == 'status_'..ID then		
		sendStatus(replyChan)
	end
end 
modem.close(1)
